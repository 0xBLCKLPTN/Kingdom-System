version: '3.6'

services:
  prometheus:
    image: prom/prometheus:latest
    volumes:
      - ./prometheus:/etc/prometheus/
    container_name: prometheus
    hostname: prometheus
    command:
      - --config.file=./configuration-files/prometheus.yml
    ports:
      - 9090:9090
    restart: unless-stopped
    environment:
      TZ: "Europe/Moscow"
    networks:
      - default

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    container_name: exporter
    hostname: exporter
    command:
      - --path.procfs=/host/proc
      - --path.sysfs=/host/sys
      - --collector.filesystem.ignored-mount-points
      - ^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)
    ports:
      - 9100:9100
    restart: unless-stopped
    environment:
      TZ: "Asia/Ekaterinburg"
    networks:
      - default
    
  grafana:
    image: grafana/grafana
    user: root
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    container_name: grafana
    hostname: grafana
    restart: unless-stopped
    environment:
      TZ: "Asia/Ekaterinburg"
    networks:
      - default

  redis:
    image: "redislabs/rejson"
    container_name: 'RedisCacheServer'
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass sOmE_SeCuRe_PaSsWoRd
    volumes:
      - cache:/data
    networks:
      - default

  rabbitmq:
    image: rabbitmq:3-management-alpine
    container_name: 'rabbitmq'
    ports:
      - 5672:5672
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - default
  
  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.6.0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node

  kibana:
    image: docker.elastic.co/kibana/kibana:6.6.0
    ports:
      - "5601:5601"
    environment:
      SERVER_NAME: kibana
      SERVER_HOST: kibana
      ELASTICSEARCH_HOSTS: http://host.docker.internal:9200/
    depends_on:
      - elastic

  logstash:
    container_name: logstash
    image: docker.elastic.co/logstash/logstash:6.6.0
    volumes:
      - ./logstash-conf:/usr/share/logstash/pipeline/
    ports:
     - "5044:5044"
    environment:
      ELASTIC_HOST: host.docker.internal:9200
    depends_on:
      - elastic
  
  mongodb:
    image: mongo:6-jammy
    ports:
      - '27017:27017'
    volumes:
      - dbdata6:/data/db

volumes:
  cache:
    driver: local
  dbdata6:
    driver: local
